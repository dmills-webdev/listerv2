{"version":3,"sources":["assets/add.svg","assets/hamburger.svg","Signup.js","Login.js","components/TodoItem.js","components/TodoList.js","components/NewTodoForm.js","Todos.js","components/Navbar.js","App.js","index.js"],"names":["module","exports","Signup","history","useHistory","validateForm","e","a","username","target","value","password","passwordConfirmation","fetch","method","body","JSON","stringify","headers","then","res","json","data","isUsernameFree","length","console","log","preventDefault","persist","submissionValidity","isSubmissionValid","form","FormData","push","moveLabel","label","document","getElementById","name","classList","toggle","className","onSubmit","htmlFor","id","type","onFocus","onBlur","hidden","setUser","user","classes","classNames","TodoItem","task","completed","toggleCompleted","removeTodo","checked","onChange","onClick","TodoList","todos","map","todo","key","NewTodoForm","submitNewTodo","useState","updateTask","handleSubmit","autoComplete","placeholder","src","add","alt","Todos","defaultTodos","modifyTodos","useEffect","Array","isArray","catch","error","updatedTodos","filter","newTask","newTodo","Date","getTime","oldTodos","toggleMenu","NavbarLoggedIn","NavbarLoggedOut","to","exact","activeClassName","App","getUsername","hamburger","path","component","render","props","isAuthed","ReactDOM"],"mappings":"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","file":"static/js/main.61d9776f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/add.34280c59.svg\";","module.exports = __webpack_public_path__ + \"static/media/hamburger.78aa51f7.svg\";","import React from 'react'\nimport { useHistory } from \"react-router-dom\"\n\nimport './scss/Signup.scss'\n\nfunction Signup() {\n  const history = useHistory()\n\n  async function validateForm(e) {\n    const username = e.target.username.value\n    const password = e.target.password.value\n    const passwordConfirmation = e.target.passwordConfirmation.value\n    let isUsernameFree\n    await fetch('/api/signup/check-if-username-is-taken', {\n     method: 'POST',\n     body: JSON.stringify({ username }),\n     headers: { 'Content-Type': 'application/json' }\n    })\n    .then( res => res.json() )\n    .then( data => {isUsernameFree = data} )\n    if (\n      (isUsernameFree) &&\n      (password === passwordConfirmation) &&\n      (password.length > 8))\n    {\n      console.log('Form OK')\n      return true\n    }\n    else {\n      console.log('Form BAD')\n      return false\n    }\n  }\n\n// Handle form submission\n  async function handleSubmit(e) {\n    e.preventDefault()\n    e.persist()\n\n    let isSubmissionValid\n    await validateForm(e)\n    .then(submissionValidity => {isSubmissionValid = submissionValidity})\n\n    if ( isSubmissionValid )  {\n      const form = e.target\n      const data = new FormData(form)\n      await fetch('/signup', {\n       method: 'POST',\n       body: data,\n      })\n      history.push(\"/login\")\n    }\n    else {\n      console.log('Error with inputs!')\n    }\n  }\n\n  function moveLabel(e) {\n    const label = document.getElementById(e.target.name)\n    if (e.target.value === '') {\n      label.classList.toggle('focussedLabel')\n    }\n  }\n\n  return(\n    <div className='signup-container'>\n\n    <div className='welcome-banner'>\n      <h1>\n        New to Lister?\n      </h1>\n      <h2>\n        Signup to Lister for free and keep your lists synced, on all your devices, all the time.\n      </h2>\n    </div>\n\n    <div className='form-area'>\n      <form onSubmit={handleSubmit} name='signup' className='signup-form'>\n\n          <label htmlFor='username' id='username'>\n            Username\n          </label>\n          <input\n            type='text'\n            name='username'\n            onFocus={moveLabel}\n            onBlur={moveLabel}/>\n\n          <label htmlFor='password' id='password'>\n            Password\n          </label>\n          <input\n            type='password'\n            name='password'\n            onFocus={moveLabel}\n            onBlur={moveLabel}/>\n\n          <label htmlFor='passwordConfirmation' id='passwordConfirmation'>\n            Confirm password\n          </label>\n          <input\n            type='password'\n            name='passwordConfirmation'\n            onFocus={moveLabel}\n            onBlur={moveLabel}/>\n\n        <button name='submit-button' id='submit-button' hidden>Sign up</button>\n      </form>\n\n      <label htmlFor='submit-button' className='submit-proxy-button'>\n        Signup\n      </label>\n\n    </div>\n  </div>\n  )\n}\n\nexport default Signup\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport './scss/Login.scss'\n\nfunction Signup({ setUser }) {\n  const history = useHistory()\n\n// Handle form submission\n  function handleSubmit(e) {\n    e.preventDefault()\n    const form = e.target\n    const data = new FormData(form)\n    fetch('/login', {\n     method: 'POST',\n     body: data,\n    })\n    .then( res => res.json() )\n    .then( user => setUser(user) )\n    history.push('/')\n  }\n\n  // Moves fake placeholder text on inputs move and stay at the new position as long as the input isn't empty\n  function moveLabel(e) {\n    const label = document.getElementById(e.target.name)\n    if (e.target.value === '') {\n      label.classList.toggle('focussedLabel')\n    }\n  }\n\n  return(\n    <div className='login-container'>\n\n      <div className='welcome-banner'>\n        <h1>\n          Welcome back!\n        </h1>\n        <h2>\n          Login and keep your lists synced across all your devices.\n        </h2>\n      </div>\n\n      <div className='form-area'>\n        <form onSubmit={handleSubmit} name='login' className='login-form'>\n\n            <label htmlFor='username' id='username'>\n              Username\n            </label>\n            <input\n              type='text'\n              name='username'\n              onFocus={moveLabel}\n              onBlur={moveLabel}/>\n\n            <label htmlFor='password' id='password'>\n              Password\n            </label>\n            <input\n              type='password'\n              name='password'\n              onFocus={moveLabel}\n              onBlur={moveLabel}/>\n\n          <button name='submit-button' id='submit-button' hidden></button>\n        </form>\n\n        <label htmlFor='submit-button' className='submit-proxy-button'>\n          Login\n        </label>\n\n      </div>\n    </div>\n  )\n}\n\nexport default Signup\n","import React from \"react\"\nimport classNames from \"classnames\"\n\nconst classes = classNames({ // Apply multiple classes to the element\n      \"remove-todo\": true,\n      \"float-right\": true\n    })\n\nconst TodoItem = ({ id, task, completed, toggleCompleted, removeTodo }) => (\n  <div className=\"todo-item\">\n    <input\n      type=\"checkbox\"\n      value={completed}\n      checked={completed}\n      onChange={() => toggleCompleted(id)}/>\n\n    <span className={completed ? \"completed-todo\" : null}> {/*Toggle styling if todo is completed*/}\n      {task}\n    </span>\n\n    <button\n      type=\"button\"\n      className={classes}\n      onClick={() => removeTodo(id)}>\n      Remove\n    </button>\n\n  </div>\n)\n\nexport default TodoItem\n","import React from \"react\"\nimport TodoItem from \"./TodoItem\"\n\nconst TodoList = ({ todos, toggleCompleted, removeTodo }) => {\n  return(\n    <div className=\"todo-container\">\n      {\n        todos.map(todo => {\n          return(\n            <TodoItem\n              key={todo.id}\n              toggleCompleted={toggleCompleted}\n              removeTodo={removeTodo}\n              id={todo.id}\n              task={todo.task}\n              completed={todo.completed}/>\n          )\n        })\n      }\n    </div>\n  )\n}\n\nexport default TodoList\n","import React, { useState } from 'react'\n\nimport add from '../assets/add.svg'\n\nconst NewTodoForm = ({ submitNewTodo }) => {\n  let [ task, updateTask ] = useState('')\n\n  const handleInputChange = (e) => {\n    updateTask(\n      e.target.value\n    )\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()    // Prevent form submission\n    submitNewTodo(task)   // Submit todo\n    updateTask('')        // Clear textbox\n  }\n\n  return(\n    <div className='new-todo-form'>\n      <form onSubmit={(e) => handleSubmit(e)} autoComplete='off'>\n        <label>\n          <input\n            name='task'\n            value={task}\n            placeholder='E.g. Water the plants'\n            onChange={handleInputChange}\n            type='text'>\n          </input>\n        </label>\n\n        <button type='submit'>\n          <img src={add} alt='plus symbol icon'/>\n        </button>\n      </form>\n    </div>\n  )\n}\n\nexport default NewTodoForm\n","import React, { useState, useEffect } from 'react'\n\nimport TodoList from './components/TodoList'\nimport NewTodoForm from './components/NewTodoForm'\n\nimport './scss/Todos.scss'\n\nfunction Todos({ user }) {\n// Default single todo to display to unregsitered or brand new users\n  const defaultTodos = [{\n    id: 0,\n    task: 'Write first todo (or list item!)',\n    completed: false\n  }]\n  const [ todos, modifyTodos ] = useState(defaultTodos)\n\n\n// Load user's todos\n  useEffect(() => {\n    // If locally the user seems to be logged in then fetch their todos\n    if (user !== null) {\n      fetch('/api/user-todos')\n        .then(res => res.json())\n        .then(todos => {\n          if ( Array.isArray(todos) && ( (todos[0]&&todos[0].id!==0) || todos[1]) )  { // Use database todos unless problem with array\n            modifyTodos(todos)\n          }\n        })\n    }\n    // If user does not seem to be logged in locally then default back to the defaultTodos\n    else {\n      modifyTodos(defaultTodos)\n    }\n  }, [user])\n\n\n// Update users todo storage when modified\n  useEffect(() => {\n    if (user !== null) { // Check if user appears logged in, if so then PUT the updated todos to the database\n      fetch('api/user-todos', {\n        method: 'PUT',\n        body: JSON.stringify({todos}),\n        headers: { 'Content-Type': 'application/json' }\n      })\n      .then( res => res.json() )\n      .then( data => {\n        console.log('Success:', data)\n      })\n      .catch((error) => {\n        console.error('Error:', error)\n      })\n    }\n  }, [todos])\n\n\n// Add new todo to list\n  const submitNewTodo = (newTask) => {\n    let d = new Date()\n    let timeBasedID = d.getTime() // Generates a unique-to-user ID based on the time the todo is submitted\n    let newTodo = {\n      id: timeBasedID,\n      task: newTask,\n      completed: false\n    }\n    modifyTodos(oldTodos => [...oldTodos, newTodo]) // Add todo onto end of existing todo array\n  }\n\n\n// Delete todo\n  const removeTodo = (id) => {\n    modifyTodos(\n      todos.filter(todo => todo.id !== id) // FIlter out the id in question and make that the new existing todo array\n    )\n  }\n\n\n// Toggle a todo's completion status\n  const toggleCompleted = (id) => {\n    let updatedTodos = todos.map(todo => { // Linear search for the right todo item in existing todo array\n      if (todo.id === id) {\n        todo.completed = !todo.completed // Boolean flip of todo property on todo that matches the todo id that was clicked\n      }\n      return todo\n    })\n    modifyTodos(\n      updatedTodos\n    )\n  }\n///////////////////////////////////////////////////////////////// Presentational\n  return(\n    <div>\n      <TodoList\n        todos={todos}\n        toggleCompleted={toggleCompleted}\n        removeTodo={removeTodo}/>\n      <NewTodoForm\n        submitNewTodo={submitNewTodo}/>\n    </div>\n  )\n}\n\nexport default Todos\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nimport '../scss/Navbar.scss'\n\nfunction toggleMenu(e) {\n  const menu = document.getElementById('main-nav')\n  menu.classList.toggle('nav-popout')\n}\n\nfunction NavbarLoggedIn({ user, setUser }) {\n  // Log current user out\n  function logout() {\n    fetch('/logout')\n    .then( setUser(null) )\n  }\n  return (\n    <nav id='main-nav'>\n      <div className='nav-user'>\n        {user.username}\n      </div>\n      <div className='nav-button' onClick={logout}>\n        Logout\n      </div>\n    </nav>\n  )\n}\n\nfunction NavbarLoggedOut() {\n\n  return (\n    <nav id='main-nav'>\n      <NavLink\n        to='/login' exact\n        activeClassName='activeLink'\n        className='nav-button'\n        onClick={toggleMenu}>\n          Login\n      </NavLink>\n\n      <NavLink\n        to='/signup' exact\n        activeClassName='activeLink'\n        className='nav-button'\n        onClick={toggleMenu}>\n          Signup\n      </NavLink>\n\n      <NavLink\n        to='/' exact\n        activeClassName='activeLink'\n        className='nav-button'\n        onClick={toggleMenu}>\n          Todos\n      </NavLink>\n    </nav>\n  )\n}\n\nexport { NavbarLoggedIn, NavbarLoggedOut }\n","import React, { useState } from 'react'\nimport { BrowserRouter, NavLink, Route } from 'react-router-dom'\n\nimport Signup from './Signup'\nimport Login from './Login'\nimport Todos from './Todos'\nimport { NavbarLoggedIn, NavbarLoggedOut } from './components/Navbar'\n\nimport \"./scss/App.scss\"\nimport hamburger from './assets/hamburger.svg'\n\nfunction App() {\n  // App's local record if a user appears logged in or not, passed to Navbar\n  const [ user, setUser ] = useState(null)\n\n  // Toggles dropdown menu visibility change on mobile site\n  function toggleMenu(e) {\n    const menu = document.getElementById('main-nav')\n    menu.classList.toggle('nav-popout')\n  }\n\n  // Gets the username of the user to display in the header bar\n  function getUsername() {\n    if (user !== null) {\n      return user.username\n    }\n  }\n\n  return(\n    <BrowserRouter>\n        <header className='main-header'>\n\n          <div className='mobile-username'>\n            {getUsername()}\n          </div>\n\n          <NavLink\n            to='/' exact\n            activeClassName='activeLink'\n            className='logo'>\n              Lister\n          </NavLink>\n\n          <div\n            className='hamburger-icon'\n            onClick={toggleMenu}>\n            <img src={hamburger} alt='Hamburger menu icon for navigation menu'/>\n          </div>\n\n          {/*Change navbar options depending on if the user is logged in or not*/}\n          { user ?\n            <NavbarLoggedIn user={user} setUser={setUser}/>\n            :\n            <NavbarLoggedOut/>\n          }\n        </header>\n\n        <main>\n          <Route\n            exact path='/signup'\n            component={Signup} />\n\n          <Route\n            exact path='/login'\n            render={(props) => (\n              <Login {...props} isAuthed={true}\n                setUser={setUser}/>\n            )} />\n\n          <Route\n            exact path='/'\n            render={(props) => (\n              <Todos {...props} isAuthed={true}\n                user={user}/>\n            )} />\n        </main>\n    </BrowserRouter>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\n\nimport App from \"./App\"\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}